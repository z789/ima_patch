
以下在ubuntu 20.04上， kernel v5.4.0 上测试


启用IMA的TCB规则：
    启动linux时， 启用内核参数 ima_policy=tcb.
    
    TCB度量规则：1 执行的程序；2 加载的so库；3 uid==0或者euid==0读取的文件。
   
   
存在的问题：
    1. 没有开启策略文件 /sys/kernel/security/ima/policy的读权限。
    2. 当向 /sys/kernel/security/ima/policy设置策略时，如果策略中有fsname=过滤条件（如fsname="ext4"), 在设置策略失败时，
       内核泄漏内存。
    3. 用户设置策略，只能添加。 而不是清除原来的策略，使用新策略。
    4. uid为0或者euid为0的用户， 读取的文件不一定都要度量。例如 /tmp  /var/目录下的文件可以不度量（特别是日志文件）。
       现在可以设置 /tmp  /var/下文件的label配合selinux进行过滤。 
       但是在ubuntu上，使用的是apparmor，而apparmor的策略是基于路径的。为了适应ubuntu和习惯设置基于路径的策略的用户，
       增加 path_prefix过滤条件（例如：path_prefix="/var/")
       
    该patch的目的是解决上面的 2/3/4 三个问题，增加恢复系统默认策略的功能。问题1可以通过开启相关的编译选项解决。

增加以下功能：
    1. 恢复系统默认策略：
      echo default > /sys/kernel/security/ima/policy
    2. 度量结果增加 func 和 mask字段。
       func 表示度量的位置。 BPRM_CHECK是执行可执行文件时，MMAP_CHECK是加载so库时，
                             FILE_CHECK是open打开文件时。 
       maske: MAY_EXEC MAY_READ  MAY_WRITE  MAY_APPEND 之一或其中几个     

      10 8432d508d76ff6ca76e5e0ef48360840c082f25d ima-ng sha1:732458574c63c3790cad093a36eadfb990d11ee6 BPRM_CHECK MAY_EXEC /bin/ls
      10 8dbfc28e49502bdddb4113b4b82a4ccf23a0e6b7 ima-ng sha1:5324a23db0f0f7676974c015163f18ec0929ac34 MMAP_CHECK MAY_EXEC /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so.0.0.0
      10 0105b1ca71e59d7cc50e4e0eb0878592feeb7bb2 ima-ng sha1:9e886a7dec52bbf1bf826f217baaf1f6e0f9216d FILE_CHECK MAY_READ /var/llll
 
 
 例子：
    不度量/var/目录下文件读取操作的配置（/var/下文件的执行操作仍度量） 文件/root/custom_ima_policy内容：

	dont_measure fsmagic=0x9fa0 
	dont_measure fsmagic=0x62656572 
	dont_measure fsmagic=0x64626720 
	dont_measure fsmagic=0x1021994 
	dont_measure fsmagic=0x1cd1 
	dont_measure fsmagic=0x42494e4d 
	dont_measure fsmagic=0x73636673 
	dont_measure fsmagic=0xf97cff8c 
	dont_measure fsmagic=0x43415d53 
	dont_measure fsmagic=0x27e0eb 
	dont_measure fsmagic=0x63677270 
	dont_measure fsmagic=0x6e736673 
	dont_measure fsmagic=0xde5e81e4 
	measure func=MMAP_CHECK mask=MAY_EXEC 
	measure func=BPRM_CHECK mask=MAY_EXEC 
	dont_measure func=FILE_CHECK mask=^MAY_READ path_prefix=/var/ 
	dont_measure func=FILE_CHECK mask=^MAY_READ path_prefix=/tmp/ 
	measure func=FILE_CHECK mask=^MAY_READ euid=0 
	measure func=FILE_CHECK mask=^MAY_READ uid=0 
	measure func=MODULE_CHECK 
	measure func=FIRMWARE_CHECK 
	measure func=POLICY_CHECK 
	measure func=KEXEC_KERNEL_CHECK 
	measure func=MODULE_CHECK 
  
       
     其中策略 dont_measure func=FILE_CHECK mask=^MAY_READ  path_prefix=/var/和 
              dont_measure func=FILE_CHECK mask=^MAY_READ path_prefix=/tmp/是在默认策略基础上添加的.    
     
     通过以下命令启用定制的策略：
     echo /root/custom_ima_policy > /sys/kernel/security/ima/policy
     
     这时uid==0或者euid==0用户读取 /var/、/tmp/下的文件就不再度量了。
        
